/*@
<p>The Solar for All Calculator macro calculates the Blended Baseline Electric Utility Rate and Solar Generation Compensation Rate described in the <em>U.S. Environmental Protection Agency Solar for All Household Savings Best Practices</em> handbook.</p>
<p>For detailed instructions and how-to videos, see [<em><strong>link to Box folder</strong></em>].</p>
<p><em>THIS IS A DRAFT VERSION FOR DEMONSTRATION PURPOSES ONLY</em></p>

<h5 id="overall-steps">Overall Steps</h5>

<ol>
<li>Specify inputs on the following input pages. Inputs on other pages can be ignored.
	<ul>
	<li>Location and Resource</li>
	<li>System Design</li>
	<li>Electricity Rates</li>
	<li>Electric Load</li>
	</ul>
</li>
<li>Run the macro.</li>
<li>Analyze the results.</li>
<li>Modify the inputs and rerun the macro until you are satisfied with the results.</li>
</ol>

<h5 id="required-information">Required Information</h5>

<ul>
<li>Location of the PV system as a street address or latitude/longitude pair</li>
<li>Size of the PV system in DC kilowatts (kW)</li>
<li>Orientation (tilt and azimuth angles) of PV modules (panels)</li>
<li>Retail electricity rate structure from the electricity service provider*</li>
<li>Time series (hourly or subhourly) electricity consumption data and/or monthly total usage data*</li>
</ul>

<p>*SAM provides tools for downloading electricity rate and synthetic time series usage data if you don't have access to the data.</p>

<h5 id="optional-information">Optional Information</h5>

<p>If you are running SAM simulations to calculate metrics like the net present value (NPV) or payback period, you will need to provide the following information in addition to the required information listed above. The following optional information is not used by the Solar for All macro.</p>

<ul>
<li>Project installation and operating costs.</li>
<li>Financial parameters (taxes, debt, incentives)</li>
</ul>

<h5 id="instructions">Instructions</h5>

<p>These are the basic steps to use the Solar for All macro. For detailed instructions and how-to videos, see [<em><strong>link to Box folder</strong></em>].</p>
<ol>
<li>On the Location and Resource input page, download a default TMY file by typing a street address or location name under "Download Weather Files" and clicking <strong>Download and add to library</strong>.</li>
<li>On the System Design page, enter values for <strong>System nameplate capacity</strong>, <strong>Tilt</strong>, and <strong>Azimuth</strong>. If you are modeling a ground-mounted PV array or a roof-mounted array that allows air to flow beneath the modules System Design, choose "Fixed open rack" for <strong>Array type</strong>.</li>
<li>On the Electricity Rates page, click <strong>Search for rates</strong> and download the appropriate rate structure.</li>
<li>On the Electric Load page either a) import time series electricity consumption data or b) download synthetic data for Year 1. You can optionally scale the data to match monthly usage data.
	<ul>
	<li>To import time series data from a CSV or text file, click <strong>Edit array</strong>, then click <strong>Import</strong>. The file must contain one year's worth of data in a single column of kW values with one header row.</li>
	<li>To download synthetic usage data from the OpenEI "Commercial and Residential Hourly Load Profiles for all TMY3 Locations in the United States" dataset, click <strong>Download Electric Load Data</strong>.</li>
	<li>To scale the time series data to monthly usage data, check <strong>Scale electric load profile to monthly usage</strong>, click <strong>Edit values</strong>, and type monthly usage values in the table.</li>
	</ul>
</li>
<li>On the File menu, click <strong>Save</strong> to save your data to a .sam file.</li>
<li>Click <strong>Run</strong> at the top of this window to run the macro. When the macro finishes, it opens a window displaying results and exports them to a CSV file with the name "[case name]-solar-for-all-macro-results.csv" in the same folder as your .sam file.</li>
<li>Review the blended rate and savings percentage values calculated by the macro, revise inputs, and rerun the macro until you are satisfied with the results.</li>
</ol>

@*/

// check for valid configuration only PVWatts/Residential is supported
config = configuration();

fin = config[1];

ok = false;
if ( fin == 'Commercial' || fin == 'Residential' ) {
	ok = true;
}
	
if (!ok) {
	msgbox('Note!\n' +
	       'This macro requires a case with the Residential or Commercial financial model.\n' +
	       'The financial model for this case is: ' + fin + '\n' + 
	       'Exiting macro.');
	exit;
}

// run simulation
out('Running simulation...');
sim_msg = '';
ok = simulate(sim_msg, true);
if (!ok) {
	msgbox('Simulation failed!\n' + sim_msg);
	outln('Simulation failed!');
	outln('Simulation message: ' + sim_msg);
	outln('Exiting script.');
	exit;
}
outln('done.');
outln();

// All values are for year 1 only

// Baseline electric utility cost
baseline_cost = get('utility_bill_wo_sys_year1'); // $

// Baseline electric utility consumption
baseline_consumption = get('year1_electric_load'); // kWh

// avoid divide by zero
if ( baseline_consumption == 0 ) {
	msgbox('Divide by Zero Error!\nBaseline electric utility consumption is zero, cannot calculate blended baseline utility rate.');
	outln('Divide by zero error. Exiting script.');
	exit;
}

// Blended baseline electric utility rate
blended_rate = baseline_cost / baseline_consumption; // $/kWh

// Electricity bill savings
bill_savings = get('savings_year1'); // $

// Household allocated solar generation
solar_generation = get('annual_energy'); // kWh

// avoid divide by zero
if ( solar_generation == 0 ) {
	msgbox('Divide by Zero Error!\nHousehold allocated solar generation is zero, cannot calculate solar generation compensation rate.');
	outln('Divide by zero error. Exiting script.');
	exit;
}

// Solar generation compensation rate
compensation_rate = bill_savings / solar_generation; // $/kWh

// output labels
label_blended_rate = 'Blended Baseline Electric Utility Rate';
label_baseline_consumption = 'Baseline Electric Utility Consumption';
label_baseline_cost = 'Baseline Electric Utility Cost';
label_solar_generation = 'Household Allocated Solar Generation';
label_compensation_rate = 'Solar Generation Compensation Rate';

// output values as string with units
str_blended_rate = sprintf('$%.3f/kWh consumed (year 1)', blended_rate);
str_baseline_consumption = sprintf('%, kWh consumed (year 1)', round(baseline_consumption));
str_baseline_cost = sprintf('$%m (year 1)', baseline_cost);
str_solar_generation = sprintf('%, kWh generated (year 1)', round(solar_generation));
str_compensation_rate = sprintf('$%.3f/kWh generated (year 1)', compensation_rate);

// console output
outln(label_blended_rate + ' = ' + str_blended_rate);
outln(label_baseline_consumption + ' = ' + str_baseline_consumption);
outln(label_baseline_cost + ' = ' + str_baseline_cost);
outln(label_solar_generation + ' = ' + str_solar_generation);
outln(label_compensation_rate + ' = ' + str_compensation_rate);
outln();


// html output
str_html = 
'<html><body>' + 
'<h5><font size = "4">Solar for All Calculator Macro Results</font></h5>' + 
'<table bgcolor=#dddddd width=100%>' + 
'<tr><th>Rate</th><th>Value</th></tr>' + 
'<tr bgcolor=#ffffff><td>' + label_blended_rate + '</td><td align="center">' + str_blended_rate + '</td></tr>' +             
'<tr><td>'+ label_baseline_consumption + '</b></td><td align="center">' + str_baseline_consumption + '</td></tr>' +             
'<tr bgcolor=#ffffff><td>'+ label_baseline_cost + '</b></td><td align="center">' + str_baseline_cost + '</td></tr>' +             
'<tr><td>' + label_solar_generation + '</td><td align="center">' + str_solar_generation + '</td></tr>' +             
'<tr bgcolor=#ffffff><td>' + label_compensation_rate + '</td><td align="center">' + str_compensation_rate + '</td></tr>' +             
'</table>' +
'</body></html>';

html_dialog( str_html, 'Solar for All Calculator Macro Results', [200,200,600,240] );

// csv output
str_csv = 
'Variable,Value,Units\n' +
label_blended_rate + ',' + to_string(blended_rate) + ',' + '$/kWh of electricity consumed (year 1)' + '\n' +
label_baseline_consumption + ',' + to_string(baseline_consumption) + ',' + 'kWh of electricity consumed (year 1)' + '\n' +
label_baseline_cost +',' + to_string(baseline_cost) + ',' + '$ (year 1)' + '\n' +
label_solar_generation + ',' + to_string(solar_generation) + ',' + 'kWh of electricity generated (year 1)' + '\n' +
label_compensation_rate + ',' + to_string(compensation_rate) + ',' + '$/kWh of electricity generated (year 1)';

// if running from .sam file that has not been saved, choose folder to save .csv
if ( project_file() == '' ) {
	dir = choose_dir(homedir(),'Choose folder to save CSV results');
}
else {
	dir = path_only(project_file());
}

// csv file name based on case name
f_csv = dir + '/' + replace(case_name(),'/','-') + '-solar-for-all-macro-results.csv';

ok = write_text_file(f_csv, str_csv);
if (!ok) {
	outln('Failed to write results to CSV file: ' + f_csv + '\n  The file may be open in another program.');
	outln();
}
else {
	browse( f_csv );
}

// finish

outln('Macro done.');
